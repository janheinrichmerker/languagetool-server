name: "CI"

on:
  push:

concurrency:
  group: ${{ github.workflow }}-${{ github.event_name }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  docker-build-languagetool-server:
    name: "🏗️ Build Docker image"
    runs-on: ubuntu-latest
    steps:
    - name: "📥 Check-out"
      uses: actions/checkout@v5
    - name: "🧰 Set up QEMU"
      uses: docker/setup-qemu-action@v3
    - name: "🧰 Set up Docker Buildx"
      uses: docker/setup-buildx-action@v3
    - name: "🏗️ Build Docker image"
      uses: docker/build-push-action@v6
      with:
        context: .
        file: languagetool-server.dockerfile
        push: false
  docker-build-ngrams-download:
    name: "🏗️ Build Docker image"
    runs-on: ubuntu-latest
    steps:
    - name: "📥 Check-out"
      uses: actions/checkout@v5
    - name: "🧰 Set up QEMU"
      uses: docker/setup-qemu-action@v3
    - name: "🧰 Set up Docker Buildx"
      uses: docker/setup-buildx-action@v3
    - name: "🏗️ Build Docker image"
      uses: docker/build-push-action@v6
      with:
        context: .
        file: ngrams-download.dockerfile
        push: false
  docker-publish-languagetool-server:
    name: "🚀 Publish Docker image"
    if: github.event_name == 'push' && endsWith(github.event.base_ref, 'main') && startsWith(github.ref, 'refs/tags')
    permissions:
      contents: read
      packages: write
    needs:
    - docker-build-languagetool-server
    - docker-build-ngrams-download
    runs-on: ubuntu-latest
    steps:
    - name: "📥 Check-out"
      uses: actions/checkout@v5
    - name: "🧰 Set up QEMU"
      uses: docker/setup-qemu-action@v3
    - name: "🧰 Set up Docker Buildx"
      uses: docker/setup-buildx-action@v3
    - name: "🔑 Login to GitHub Packages"
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: "ℹ️ Extract image metadata"
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: |
          ghcr.io/${{ github.repository }}
    - name: "🚀 Build and push image"
      uses: docker/build-push-action@v6
      with:
        context: .
        file: languagetool-server.dockerfile
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
  docker-publish-ngrams-download:
    name: "🚀 Publish Docker image"
    if: github.event_name == 'push' && endsWith(github.event.base_ref, 'main') && startsWith(github.ref, 'refs/tags')
    permissions:
      contents: read
      packages: write
    needs:
    - docker-build-languagetool-server
    - docker-build-ngrams-download
    runs-on: ubuntu-latest
    steps:
    - name: "📥 Check-out"
      uses: actions/checkout@v5
    - name: "🧰 Set up QEMU"
      uses: docker/setup-qemu-action@v3
    - name: "🧰 Set up Docker Buildx"
      uses: docker/setup-buildx-action@v3
    - name: "🔑 Login to GitHub Packages"
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: "ℹ️ Extract image metadata"
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: |
          ghcr.io/${{ github.repository }}/ngrams-download
    - name: "🚀 Build and push image"
      uses: docker/build-push-action@v6
      with:
        context: .
        file: ngrams-download.dockerfile
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
  github-release:
    name: "🚀 Create GitHub release"
    if: github.event_name == 'push' && endsWith(github.event.base_ref, 'main') && startsWith(github.ref, 'refs/tags')
    needs:
    - docker-build-languagetool-server
    - docker-build-ngrams-download
    - docker-publish-languagetool-server
    - docker-publish-ngrams-download
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
    - name: "📥 Check-out"
      uses: actions/checkout@v5
    - name: "📥 Download Python wheels"
      uses: actions/download-artifact@v5
      with:
        name: wheels
        path: dist
    - name: "🚀 Create GitHub release"
      uses: softprops/action-gh-release@v2
      with:
        name: Release ${{ github.ref_name }}
        files: dist/*
        fail_on_unmatched_files: true
        draft: false
        prerelease: false
        generate_release_notes: true